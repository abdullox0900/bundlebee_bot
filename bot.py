import os
import logging
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.enums import ParseMode
import asyncio

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=os.getenv('BOT_TOKEN'))
dp = Dispatcher()
router = Router()

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é
def get_menu_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='üü° Launch', callback_data='launch'),
                InlineKeyboardButton(text='üí° AI Coin Architect', callback_data='ai_coin')
            ],
            [
                InlineKeyboardButton(text='üíµ Wallets', callback_data='wallets')
            ],
            [
                InlineKeyboardButton(text='üöÄ Bump & Volume Bots', callback_data='bump'),
                InlineKeyboardButton(text='üí¨ Commenter', callback_data='commenter')
            ],
            [
                InlineKeyboardButton(text='üíé Subscription', callback_data='subscription'),
                InlineKeyboardButton(text='üë• Referrals', callback_data='referrals')
            ],
            [
                InlineKeyboardButton(text='‚öôÔ∏è Settings', callback_data='settings')
            ]
        ]
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏
def get_back_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_main')
            ]
        ]
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Bump & Volume Bots
def get_bump_volume_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='üöÄ Bump Bot', url='https://t.me/repump_me_bot'),
                InlineKeyboardButton(text='üìä Volume Bot', url='https://t.me/chartup_bot')
            ],
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_main')
            ]
        ]
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Wallets
def get_wallets_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='üí∞ Create Buy Wallets', callback_data='create_buy_wallets')
            ],
            [
                InlineKeyboardButton(text='‚ûï Add Existing Buy Wallets', callback_data='add_existing_wallets')
            ],
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_main')
            ]
        ]
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Create Buy Wallets
def get_create_wallets_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_wallets')
            ]
        ]
    )
    return keyboard

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Add Existing Buy Wallets
def get_add_wallets_keyboard():
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_wallets')
            ]
        ]
    )
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Wallets
def get_wallets_text():
    return "üí∞ Create Buy Wallets used to purchase the token."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Create Buy Wallets
def get_create_wallets_text():
    return "üí∞ Please enter the number of buy wallets to generate (1 to 28):"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Add Existing Buy Wallets
def get_add_wallets_text():
    return "üîë Please enter each Buy Wallet private key on a new line. For Example:\nKey 1\nKey 2"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ—à–µ–ª—å–∫–æ–≤
def get_no_wallets_warning():
    return "‚ö†Ô∏è You don't have any wallets!\n\nPlease press the button below to go to the wallets menu to create or load wallets."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def send_welcome(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    username = message.from_user.username or message.from_user.first_name
    
    welcome_text = get_main_text(username)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –Ω–æ –±–µ–∑ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–æ–∫
    await message.answer(welcome_text, reply_markup=get_menu_keyboard(), parse_mode=ParseMode.HTML, disable_web_page_preview=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–ø—Ä–∞–≤–∫–∏
def get_help_text():
    return """üêù Welcome to the BundleBee help menu:

Main Menu:
üîç Quick access to all major functions of the bot.
Use: /start

Subscription Menu:
üíé Subscribe and manage your subscription.
Use: /subscription

Wallet Menu:
üíµ Create and manage wallets, and distribute SOL to buy wallets.
Use: /wallets

Coin Menu:
üü° Create and manage your coins.
Use: /tokens

AI Architect Menu:
üí° Generate coin ideas based on market trends.
Use: /architect

Settings Menu:
‚öôÔ∏è Adjust transaction fees, slippage, and tips.
Use: /settings

Referral Menu:
üë• Check out bonuses and details about our referral program.
Use: /referrals

üë®‚Äçüíª Support - <a href="https://discord.gg/bundlebee">Alpha Discord</a>

üìö For detailed information, check our <a href="https://gitbook.io/bundlebee">GitBook</a>!"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@router.message(Command("help"))
async def send_help(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –º–µ–Ω—é –ø–æ–º–æ—â–∏
    """
    help_text = get_help_text()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –Ω–æ –±–µ–∑ –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–æ–∫
    await message.answer(help_text, reply_markup=get_back_keyboard(), parse_mode=ParseMode.HTML, disable_web_page_preview=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def get_main_text(username):
    return f"""üëã Welcome {username}!
Get started with launching and managing your tokens, all with AI features.

üü° Launch
Try our bot with only the Dev Wallet purchasing. Subscribe for more!

üí° AI Coin Architect
Get ready to launch coin ideas based on the most successful coins in the current 24h.

üíµ Wallets
Prepare wallets for a quick and efficient token launch.

üöÄ Bump & Volume Bots
Boost your coin visibility and trading volume with specialized tools.

üí¨ Commenter
Add comments that will be posted automatically on the token page.

üíé Subscription
Unlock the full potential with a subscription plan.

üë• Referrals
Share and earn through our referral system.

‚öôÔ∏è Settings
Adjust slippage settings, gas fees for transactions, and tip amounts for Jito.

üì¢ Socials
Join us on <a href="https://t.me/bundlebee">Telegram</a>, <a href="https://twitter.com/bundlebee">Twitter</a> and <a href="https://youtube.com/bundlebee">Youtube</a>.

‚ö†Ô∏è Beta Access
BundleBee is currently in beta, if you encounter any bugs please report them in our <a href="https://discord.gg/bundlebee">Discord</a>.

‚ùì Need help? Type /help."""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
def get_referral_text(user_id):
    referral_link = f"https://t.me/BundleBeeBot?start=q0x{user_id}"
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    ref_count = 0
    ref_with_sub = 0
    bonus_percent = "20%"
    bonus_balance = "0 SOL"
    
    return f"""üêù Share your referral link, and earn bonuses!
For each referral who purchases their first subscription, you will earn a bonus of the subscription's cost.

üì¢ Your Account:
üîó Referral Link: {referral_link}

üë• Number of Referrals: {ref_count}
üìä Number of Referrals with Subscription: {ref_with_sub}

üîç Bonus: {bonus_percent}
üí∞ Bonus Balance: {bonus_balance}"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Bump & Volume Bots
def get_bump_volume_text():
    return """üêù Our Bump & Volume bots are still under development!
They will be available in the near future, for now please use the bots below:"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@router.callback_query(F.data)
async def process_callback(callback_query):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    """
    await callback_query.answer()
    
    if callback_query.data == 'back_to_main':
        # –í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "Back"
        username = callback_query.from_user.username or callback_query.from_user.first_name
        main_text = get_main_text(username)

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback_query.message.edit_text(
            main_text, 
            reply_markup=get_menu_keyboard(),
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=True
        )
    elif callback_query.data == 'launch':
        text = "Launch section. Try our bot with only the Dev Wallet purchasing. Subscribe for more!"
        await callback_query.message.edit_text(text, reply_markup=get_menu_keyboard(), parse_mode=ParseMode.HTML)
    elif callback_query.data == 'ai_coin':
        text = "AI Coin Architect. Get ready to launch coin ideas based on the most successful coins in the current 24h."
        await callback_query.message.edit_text(text, reply_markup=get_menu_keyboard(), parse_mode=ParseMode.HTML)
    elif callback_query.data == 'wallets':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å Wallets
        wallets_text = get_wallets_text()
        await callback_query.message.edit_text(
            wallets_text,
            reply_markup=get_wallets_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'create_buy_wallets':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Create Buy Wallets
        create_wallets_text = get_create_wallets_text()
        await callback_query.message.edit_text(
            create_wallets_text,
            reply_markup=get_create_wallets_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'add_existing_wallets':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Add Existing Buy Wallets
        add_wallets_text = get_add_wallets_text()
        await callback_query.message.edit_text(
            add_wallets_text,
            reply_markup=get_add_wallets_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'back_to_wallets':
        # –í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é Wallets
        wallets_text = get_wallets_text()
        await callback_query.message.edit_text(
            wallets_text,
            reply_markup=get_wallets_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'bump':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å Bump & Volume –±–æ—Ç–∞–º–∏
        bump_volume_text = get_bump_volume_text()
        await callback_query.message.edit_text(
            bump_volume_text, 
            reply_markup=get_bump_volume_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'commenter':
        text = "Commenter section. Add comments that will be posted automatically on the token page."
        await callback_query.message.edit_text(text, reply_markup=get_menu_keyboard(), parse_mode=ParseMode.HTML)
    elif callback_query.data == 'subscription':
        text = "Subscription section. Unlock the full potential with a subscription plan."
        await callback_query.message.edit_text(text, reply_markup=get_menu_keyboard(), parse_mode=ParseMode.HTML)
    elif callback_query.data == 'referrals':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
        user_id = callback_query.from_user.id
        referral_text = get_referral_text(user_id)
        await callback_query.message.edit_text(
            referral_text, 
            reply_markup=get_back_keyboard(),
            parse_mode=ParseMode.HTML
        )
    elif callback_query.data == 'settings':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–æ—à–µ–ª—å–∫–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Settings
        no_wallets_text = get_no_wallets_warning()
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚¨ÖÔ∏è Back', callback_data='back_to_main'),
                    InlineKeyboardButton(text='üí∞ Wallets', callback_data='wallets')
                ]
            ]
        )
        await callback_query.message.edit_text(
            no_wallets_text,
            reply_markup=keyboard,
            parse_mode=ParseMode.HTML
        )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
dp.include_router(router)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.info("–ë–æ—Ç BundleBee –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())